<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>